<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>